//
//  TwitterLoggingService.xcconfig
//  TwitterLoggingService
//
//  Copyright Â© 2020 Twitter. All rights reserved.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//          http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//

//
// use this configuration for differences from the default project settings
// (often recommended by Xcode version upgrades).  for project settings that
// must differ between Debug configuration & Release configuration, make the
// specific setting change in the project.pbxproj .
// (cf https://pewpewthespells.com/blog/xcconfig_guide.html#CondVarConfig for
// why use of SETTING[config=Debug] does not do what we want.)

// Configuration settings file format documentation can be found at:
// https://help.apple.com/xcode/#/dev745c5c974


//
// Arhitectures

SDKROOT = iphoneos

//
// Build Options (iOS)

ENABLE_BITCODE = NO
ENABLE_TESTABILITY = YES

//
// Deployment (iOS)

TARGETED_DEVICE_FAMILY = 1,2


//
// Linking

CURRENT_PROJECT_VERSION = 2.9
DYLIB_COMPATIBILITY_VERSION = 2
DYLIB_CURRENT_VERSION = $(CURRENT_PROJECT_VERSION)
OTHER_LDFLAGS = -ObjC

//
// Search Paths

// marked "(Deprecated)" in the UI, but still defaults to YES as iOS Default
ALWAYS_SEARCH_USER_PATHS = NO


//
// Apple Clang - Code Generation

GCC_NO_COMMON_BLOCKS = YES


//
// Apple Clang - Language - C++

GCC_C_LANGUAGE_STANDARD = gnu99


//
// Apple Clang - Language - C++

CLANG_CXX_LANGUAGE_STANDARD = gnu++0x


//
// Apple Clang - Language - Modules

CLANG_ENABLE_MODULES = YES


//
// Apple Clang - Language - Objective-C

CLANG_ENABLE_OBJC_ARC = YES


//
// Apple Clang - Preprocessing

ENABLE_STRICT_OBJC_MSGSEND = YES


//
// Apple Clang - Warnings - All Languages

CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_COMMA = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
CLANG_WARN_EMPTY_BODY = YES
CLANG_WARN_ENUM_CONVERSION = YES
CLANG_WARN_INFINITE_RECURSION = YES
CLANG_WARN_INT_CONVERSION = YES
CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES
CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES
CLANG_WARN_STRICT_PROTOTYPES = YES
CLANG_WARN_UNREACHABLE_CODE = YES
GCC_WARN_64_TO_32_BIT_CONVERSION = YES
GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR
GCC_WARN_SHADOW = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_VARIABLE = YES


//
// Apple Clang - Warnings - C++

CLANG_WARN_RANGE_LOOP_ANALYSIS = YES
CLANG_WARN_SUSPICIOUS_MOVE = YES


//
// Apple Clang - Warnings - Objective-C

CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR
CLANG_WARN_OBJC_LITERAL_CONVERSION = YES
CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR
GCC_WARN_UNDECLARED_SELECTOR = YES

//
// Apple Clang - Warnings - Objective-C and ARC

CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES


//
// Swift Compiler - Language

// (code has #if swift(>=5.0) to handle both cases).
//
// default to 5.0 for Xcode versions 10.2 and beyond.
SWIFT_VERSION = 5.0
// but legacy support for using Swift 4.2 when building using Xcode 10.1
// this specific version must come after the default, or Xcode 10.1 will report an error diagnostic
SWIFT_VERSION[sdk=*12.1] = 4.2 // (*12.1) == (iphoneos12.1 || iphonesimulator12.1 || tvos*12.1 et al)
